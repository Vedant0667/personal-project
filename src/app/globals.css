@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

@layer components {
  .lightbox-img {
    @apply rounded-2xl ring-1 ring-white/10;
  }
}

/* === Site theming (cream / orange) =============================== */
:root{
  --cream: #FFFBEB;                 /* base cream */
  --line: rgba(245,158,11,0.09);    /* grid line color (orange tint) */
  --dot: rgba(245,158,11,0.14);     /* dot color if you pick dots */
  --hatch: rgba(245,158,11,0.07);    /* hatch stroke */
}

/* Use these on <body>. Exactly ONE pattern class at a time.  */
@layer utilities{
  /* Default: clean grid lines every 28px */
  .site-cream-grid{
    background-color: var(--cream);
    background-image:
      linear-gradient(to right, var(--line) 1px, transparent 1px),
      linear-gradient(to bottom, var(--line) 1px, transparent 1px);
    background-size: 28px 28px;
    background-attachment: fixed;
  }

  /* Option B: offset micro-dots (toggle in layout if you want) */
  .site-cream-dots{
    background-color: var(--cream);
    background-image:
      radial-gradient(var(--dot) 1.25px, transparent 1.25px),
      radial-gradient(var(--dot) 1.25px, transparent 1.25px);
    background-position: 0 0, 14px 14px;
    background-size: 28px 28px;
    background-attachment: fixed;
  }

  /* Option C: subtle diagonal hatch (45deg) */
  .site-cream-hatch{
    background-color: var(--cream);
    background-image:
      repeating-linear-gradient(
        45deg,
        var(--hatch) 0 2px,
        transparent 2px 14px
      );
    background-attachment: fixed;
  }
}

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base stacks bound to CSS variables from next/font */
@layer base {
  html { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }
  body { font-family: var(--font-sans), ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji"; }
  h1, h2, h3 { font-family: var(--font-display), ui-serif, Georgia, "Times New Roman", serif; }
}

/* Utilities for targeted font variation without touching Tailwind config */
@layer utilities {
  .font-display { font-family: var(--font-display), ui-serif, Georgia, "Times New Roman", serif; }
  .font-sans-var { font-family: var(--font-sans), ui-sans-serif, system-ui; }
  .font-mono-var { font-family: var(--font-mono), ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }
}
